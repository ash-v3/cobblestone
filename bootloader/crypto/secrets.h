#ifndef SECRETS_H
#define SECRETS_H

// Needed for ECC Public Key structure
#include "beaverssl.h"

// Size constants
#define MAX_VERSION 65535
#define MAX_MESSAGE_SIZE 1024
#define MAX_FIRMWARE_SIZE 32768
#define AES_KEY_LENGTH 32
#define IV_KEY_LENGTH 16
#define ECC_KEY_LENGTH 65

const uint8_t AES_KEY[AES_KEY_LENGTH] = {0x5,0xc6,0x93,0xb5,0x16,0x2,0xda,0x1,0xb0,0xef,0x8c,0xf2,0x58,0x1,0x20,0x4b,0x86,0x35,0xb3,0x41,0x4e,0xd6,0x59,0x6f,0xfa,0xf0,0xce,0x9d,0x4d,0xaf,0xb8,0xad};
const uint8_t IV_KEY[IV_KEY_LENGTH] = {0x1,0x41,0x26,0xbc,0x41,0x31,0x8b,0x9a,0xf,0x96,0x9c,0x8a,0x49,0x68,0x6f,0x4};
const uint8_t ECC_PUBLIC_KEY[ECC_KEY_LENGTH] = {0x4,0x52,0x9f,0xaa,0xc6,0xe1,0xf5,0x1d,0xa4,0x8c,0x58,0x89,0x7d,0x3c,0x46,0x85,0x80,0x2a,0xf9,0xcf,0x94,0xf4,0x19,0x66,0x3,0x56,0x6f,0x57,0xf5,0xae,0x1f,0x9d,0x69,0x79,0x5d,0x47,0x1a,0x1e,0x75,0xf8,0x47,0xa8,0x5,0x5d,0x9f,0x3d,0x5a,0x1f,0x6e,0x3a,0xff,0x13,0x49,0x91,0x5a,0xd3,0x69,0x1,0x5,0xa8,0x2a,0x87,0xed,0xd1,0xb};
const br_ec_public_key EC_PUBLIC = (const br_ec_public_key){
	.curve = BR_EC_secp256r1,
	.q = (void*)(ECC_PUBLIC_KEY),
	.qlen = sizeof(ECC_PUBLIC_KEY)
};
#endif