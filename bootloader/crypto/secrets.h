#ifndef SECRETS_H
#define SECRETS_H

// Needed for ECC Public Key structure
#include "beaverssl.h"

// Size constants
#define MAX_VERSION 65535
#define MAX_MESSAGE_SIZE 1024
#define MAX_FIRMWARE_SIZE 32768
#define AES_KEY_LENGTH 32
#define IV_KEY_LENGTH 16
#define ECC_KEY_LENGTH 65

const uint8_t AES_KEY[AES_KEY_LENGTH] = {0xe3,0x1e,0x21,0x63,0xfd,0x2a,0x13,0x8,0x22,0x6c,0x73,0xed,0x96,0x60,0x97,0x67,0xdf,0x1b,0xab,0x8c,0xdf,0xe9,0xa0,0xaf,0x7f,0x31,0x77,0x2d,0x3e,0x7c,0xd7,0x14};
const uint8_t IV_KEY[IV_KEY_LENGTH] = {0x59,0x33,0xff,0x85,0x52,0x4e,0xdd,0x69,0x0,0x3f,0xb8,0x27,0xf9,0x7e,0x3e,0xec};
const uint8_t ECC_PUBLIC_KEY[ECC_KEY_LENGTH] = {0x4,0x23,0xfa,0x39,0x40,0x21,0x72,0x1a,0x17,0x21,0x66,0x48,0x9,0xf8,0x8a,0xf3,0x82,0xbb,0x23,0x38,0x6a,0xe,0x9e,0x91,0xab,0x8c,0x5e,0xe1,0x82,0x46,0x10,0x23,0xb7,0xc9,0x95,0xf4,0xae,0x95,0xf7,0xc8,0xf4,0xa4,0x32,0x37,0x4e,0xb3,0x76,0xc0,0xab,0x9d,0xb9,0x2b,0xf9,0x77,0x9d,0x7e,0x35,0xac,0x11,0xa5,0xba,0x31,0x7b,0x1,0xa3};
const br_ec_public_key EC_PUBLIC = (const br_ec_public_key){
	.curve = BR_EC_secp256r1,
	.q = (void*)(ECC_PUBLIC_KEY),
	.qlen = sizeof(ECC_PUBLIC_KEY)
};
#endif