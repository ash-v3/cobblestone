#ifndef SECRETS_H
#define SECRETS_H

// Needed for ECC Public Key structure
#include "beaverssl.h"

// Size constants
#define MAX_VERSION 65535
#define MAX_MESSAGE_SIZE 1024
#define MAX_FIRMWARE_SIZE 32768
#define AES_KEY_LENGTH 32
#define IV_KEY_LENGTH 16
#define ECC_KEY_LENGTH 65

const uint8_t AES_KEY[AES_KEY_LENGTH] = {0x66,0xa4,0xfc,0xa9,0x1c,0x55,0xc9,0xc1,0xab,0x27,0x92,0xed,0xc1,0x25,0xd3,0xd7,0x36,0xea,0x67,0xfc,0xce,0x5e,0x20,0x26,0x8b,0xaf,0x90,0x72,0x85,0xee,0xf6,0x7a};
const uint8_t IV_KEY[IV_KEY_LENGTH] = {0xbe,0xd6,0x5b,0x2e,0x81,0x85,0xa9,0x90,0x3,0x85,0xfa,0xeb,0x7a,0x64,0x86,0xd1};
const uint8_t ECC_PUBLIC_KEY[ECC_KEY_LENGTH] = {0x4,0xa5,0x3d,0xd8,0x40,0x3d,0x59,0xa5,0x77,0xc8,0x74,0x63,0x5c,0xea,0x92,0xc,0xb6,0xfe,0x33,0xf8,0xdd,0xb7,0x49,0xbf,0xd8,0x2f,0x79,0xa5,0xc9,0xd4,0xac,0x1a,0x1c,0xf4,0x36,0xf8,0xfa,0x88,0x22,0xa9,0x83,0x9c,0x53,0x73,0x11,0x19,0xca,0x7c,0x15,0x85,0x50,0x8d,0x24,0xf1,0xeb,0x85,0xed,0x93,0x1f,0x88,0xc5,0xe8,0xa8,0x24,0xd8};
const br_ec_public_key EC_PUBLIC = (const br_ec_public_key){
	.curve = BR_EC_secp256r1,
	.q = (void*)(ECC_PUBLIC_KEY),
	.qlen = sizeof(ECC_PUBLIC_KEY)
};
#endif